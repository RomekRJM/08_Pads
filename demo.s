;
; File generated by cc65 v 2.19 - Git c3d7a90
;
	.fopt		compiler,"cc65 v 2.19 - Git c3d7a90"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	on
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.dbg		file, "demo.c", 3209, 1643256201
	.dbg		file, "lib/neslib.h", 9271, 1642938971
	.dbg		file, "lib/nesdoug.h", 6862, 1642938971
	.dbg		file, "sprites.h", 616, 1643251043
	.dbg		file, "lungs.h", 744, 1643255373
	.dbg		file, "math.h", 186, 1643251894
	.forceimport	__STARTUP__
	.dbg		sym, "pal_bg", "00", extern, "_pal_bg"
	.dbg		sym, "pal_spr", "00", extern, "_pal_spr"
	.dbg		sym, "ppu_wait_nmi", "00", extern, "_ppu_wait_nmi"
	.dbg		sym, "ppu_off", "00", extern, "_ppu_off"
	.dbg		sym, "ppu_on_all", "00", extern, "_ppu_on_all"
	.dbg		sym, "oam_clear", "00", extern, "_oam_clear"
	.dbg		sym, "oam_meta_spr", "00", extern, "_oam_meta_spr"
	.dbg		sym, "bank_spr", "00", extern, "_bank_spr"
	.dbg		sym, "vram_adr", "00", extern, "_vram_adr"
	.dbg		sym, "vram_unrle", "00", extern, "_vram_unrle"
	.dbg		sym, "get_frame_count", "00", extern, "_get_frame_count"
	.dbg		sym, "virusPath", "00", extern, "_virusPath"
	.import		_pal_bg
	.import		_pal_spr
	.import		_ppu_wait_nmi
	.import		_ppu_off
	.import		_ppu_on_all
	.import		_oam_clear
	.import		_oam_meta_spr
	.import		_bank_spr
	.import		_vram_adr
	.import		_vram_unrle
	.import		_get_frame_count
	.export		_virusSprite0
	.export		_virusSprite1
	.export		_virusSprite2
	.export		_virusSprite3
	.export		_lungs
	.import		_virusPath
	.export		_dbg1
	.export		_dbg2
	.export		_dbg3
	.export		_paletteBackground
	.export		_paletteSprite
	.export		_zeroCoordinates
	.export		_fortyCoordinates
	.export		_virusCoordinates
	.export		_initialVirusCoordinates
	.export		_initialise_viruses
	.export		_draw_sprites
	.export		_movement
	.export		_main

.segment	"DATA"

_dbg1:
	.word	$0080
_dbg2:
	.word	$0081
_dbg3:
	.word	$0082
_zeroCoordinates:
	.word	$0000
	.word	$0000
_fortyCoordinates:
	.word	$0028
	.word	$0028

.segment	"RODATA"

_virusSprite0:
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$08
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$08
	.byte	$10
	.byte	$00
	.byte	$08
	.byte	$08
	.byte	$11
	.byte	$00
	.byte	$80
_virusSprite1:
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$08
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$08
	.byte	$10
	.byte	$00
	.byte	$08
	.byte	$08
	.byte	$11
	.byte	$00
	.byte	$80
_virusSprite2:
	.byte	$00
	.byte	$00
	.byte	$20
	.byte	$00
	.byte	$08
	.byte	$00
	.byte	$21
	.byte	$00
	.byte	$00
	.byte	$08
	.byte	$30
	.byte	$00
	.byte	$08
	.byte	$08
	.byte	$31
	.byte	$00
	.byte	$80
_virusSprite3:
	.byte	$00
	.byte	$00
	.byte	$40
	.byte	$00
	.byte	$08
	.byte	$00
	.byte	$41
	.byte	$00
	.byte	$00
	.byte	$08
	.byte	$50
	.byte	$00
	.byte	$08
	.byte	$08
	.byte	$51
	.byte	$00
	.byte	$80
_lungs:
	.byte	$01
	.byte	$00
	.byte	$01
	.byte	$FE
	.byte	$00
	.byte	$01
	.byte	$4C
	.byte	$80
	.byte	$81
	.byte	$82
	.byte	$83
	.byte	$84
	.byte	$85
	.byte	$86
	.byte	$87
	.byte	$00
	.byte	$01
	.byte	$17
	.byte	$90
	.byte	$91
	.byte	$92
	.byte	$93
	.byte	$94
	.byte	$95
	.byte	$96
	.byte	$97
	.byte	$00
	.byte	$01
	.byte	$17
	.byte	$A0
	.byte	$A1
	.byte	$A2
	.byte	$A3
	.byte	$A4
	.byte	$A5
	.byte	$A6
	.byte	$A7
	.byte	$00
	.byte	$01
	.byte	$17
	.byte	$B0
	.byte	$B1
	.byte	$B2
	.byte	$B3
	.byte	$B4
	.byte	$B5
	.byte	$B6
	.byte	$B7
	.byte	$00
	.byte	$01
	.byte	$17
	.byte	$C0
	.byte	$C1
	.byte	$C2
	.byte	$C3
	.byte	$C4
	.byte	$C5
	.byte	$C6
	.byte	$C7
	.byte	$00
	.byte	$01
	.byte	$17
	.byte	$D0
	.byte	$D1
	.byte	$D2
	.byte	$D3
	.byte	$D4
	.byte	$D5
	.byte	$D6
	.byte	$D7
	.byte	$00
	.byte	$01
	.byte	$17
	.byte	$E0
	.byte	$E1
	.byte	$E2
	.byte	$E3
	.byte	$E4
	.byte	$E5
	.byte	$E6
	.byte	$E7
	.byte	$00
	.byte	$01
	.byte	$FE
	.byte	$00
	.byte	$01
	.byte	$BD
	.byte	$A0
	.byte	$01
	.byte	$03
	.byte	$20
	.byte	$00
	.byte	$01
	.byte	$04
	.byte	$AA
	.byte	$AA
	.byte	$00
	.byte	$01
	.byte	$05
	.byte	$0A
	.byte	$0A
	.byte	$00
	.byte	$01
	.byte	$19
	.byte	$00
	.byte	$01
	.byte	$00
_paletteBackground:
	.byte	$0F
	.byte	$06
	.byte	$16
	.byte	$26
	.byte	$0F
	.byte	$06
	.byte	$16
	.byte	$26
	.byte	$0F
	.byte	$06
	.byte	$16
	.byte	$26
	.byte	$0F
	.byte	$06
	.byte	$16
	.byte	$26
_paletteSprite:
	.byte	$0F
	.byte	$3D
	.byte	$05
	.byte	$17
	.byte	$0F
	.byte	$3D
	.byte	$30
	.byte	$05
	.byte	$0F
	.byte	$3D
	.byte	$30
	.byte	$05
	.byte	$0F
	.byte	$3D
	.byte	$30
	.byte	$05

.segment	"BSS"

_virusCoordinates:
	.res	64,$00
_initialVirusCoordinates:
	.res	64,$00

; ---------------------------------------------------------------
; void __near__ initialise_viruses (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_initialise_viruses: near

	.dbg	func, "initialise_viruses", "00", extern, "_initialise_viruses"
	.dbg	sym, "i", "00", auto, -2
	.dbg	sym, "virusesInRow", "00", auto, -4
	.dbg	sym, "y", "00", auto, -6
	.dbg	sym, "x", "00", auto, -8

.segment	"CODE"

;
; int virusesInRow = 0;
;
	.dbg	line, "demo.c", 41
	jsr     decsp2
	jsr     push0
;
; int y = 120;
;
	.dbg	line, "demo.c", 42
	lda     #$78
	jsr     pusha0
;
; int x = 54;
;
	.dbg	line, "demo.c", 43
	lda     #$36
	jsr     pusha0
;
; for (i = 0; i < NUM_VIRUSES; ++i) {
;
	.dbg	line, "demo.c", 45
	ldy     #$06
	lda     #$00
	sta     (sp),y
	iny
	sta     (sp),y
L0002:	ldy     #$07
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	cmp     #$10
	txa
	sbc     #$00
	bvc     L0006
	eor     #$80
L0006:	jpl     L0003
;
; initialVirusCoordinates[i].x = x;
;
	.dbg	line, "demo.c", 46
	iny
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     aslax2
	clc
	adc     #<(_initialVirusCoordinates)
	sta     ptr1
	txa
	adc     #>(_initialVirusCoordinates)
	sta     ptr1+1
	ldy     #$01
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	sta     (ptr1),y
	iny
	txa
	sta     (ptr1),y
;
; initialVirusCoordinates[i].y = y;
;
	.dbg	line, "demo.c", 47
	ldy     #$07
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     aslax2
	clc
	adc     #<(_initialVirusCoordinates)
	sta     ptr1
	txa
	adc     #>(_initialVirusCoordinates)
	sta     ptr1+1
	ldy     #$03
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	sta     (ptr1),y
	iny
	txa
	sta     (ptr1),y
;
; if (virusesInRow < 3) {
;
	.dbg	line, "demo.c", 49
	ldy     #$05
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	cmp     #$03
	txa
	sbc     #$00
	bvc     L0008
	eor     #$80
L0008:	bpl     L000A
;
; x += 40;
;
	.dbg	line, "demo.c", 50
	ldx     #$00
	lda     #$28
	jsr     addeq0sp
;
; ++virusesInRow;
;
	.dbg	line, "demo.c", 51
	ldy     #$04
	ldx     #$00
	lda     #$01
	jsr     addeqysp
;
; } else {
;
	.dbg	line, "demo.c", 52
	jmp     L0004
;
; x = 54;
;
	.dbg	line, "demo.c", 53
L000A:	ldy     #$00
	lda     #$36
	sta     (sp),y
	tya
	iny
	sta     (sp),y
;
; y += 20;
;
	.dbg	line, "demo.c", 54
	iny
	tax
	lda     #$14
	jsr     addeqysp
;
; virusesInRow = 0;
;
	.dbg	line, "demo.c", 55
	ldy     #$04
	lda     #$00
	sta     (sp),y
	iny
	sta     (sp),y
;
; for (i = 0; i < NUM_VIRUSES; ++i) {
;
	.dbg	line, "demo.c", 45
L0004:	ldy     #$06
	ldx     #$00
	lda     #$01
	jsr     addeqysp
	jmp     L0002
;
; }
;
	.dbg	line, "demo.c", 58
L0003:	jmp     incsp8

	.dbg	line
.endproc

; ---------------------------------------------------------------
; void __near__ draw_sprites (struct $anon-struct-0001 *virusCoordinates)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_draw_sprites: near

	.dbg	func, "draw_sprites", "00", extern, "_draw_sprites"
	.dbg	sym, "virusCoordinates", "00", auto, 0
	.dbg	sym, "i", "00", auto, -2

.segment	"CODE"

;
; void draw_sprites(Coordinates *virusCoordinates) {
;
	.dbg	line, "demo.c", 60
	jsr     pushax
;
; oam_clear();
;
	.dbg	line, "demo.c", 63
	jsr     decsp2
	jsr     _oam_clear
;
; if (get_frame_count() % 8 == 0) {
;
	.dbg	line, "demo.c", 65
	jsr     _get_frame_count
	and     #$07
	bne     L0011
;
; virusSprite = ++virusSprite % 4;
;
	.dbg	line, "demo.c", 66
	inc     M0001
	bne     L0004
	inc     M0001+1
L0004:	lda     M0001
	ldx     M0001+1
	jsr     pushax
	ldx     #$00
	lda     #$04
	jsr     tosmoda0
	sta     M0001
	stx     M0001+1
;
; for (i = 0; i < NUM_VIRUSES; ++i) {
;
	.dbg	line, "demo.c", 69
L0011:	ldy     #$00
	tya
	sta     (sp),y
	iny
	sta     (sp),y
L0005:	ldy     #$01
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	cmp     #$10
	txa
	sbc     #$00
	bvc     L0009
	eor     #$80
L0009:	jpl     L0006
;
; switch (virusSprite) {
;
	.dbg	line, "demo.c", 70
	lda     M0001
	ldx     M0001+1
;
; }
;
	.dbg	line, "demo.c", 83
	cpx     #$00
	jne     L0007
	cmp     #$00
	beq     L000C
	cmp     #$01
	beq     L000D
	cmp     #$02
	jeq     L000E
	cmp     #$03
	jeq     L000F
	jmp     L0007
;
; oam_meta_spr(virusCoordinates[i].x, virusCoordinates[i].y, virusSprite0);
;
	.dbg	line, "demo.c", 72
L000C:	jsr     decsp2
	ldy     #$03
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     aslax2
	clc
	ldy     #$04
	adc     (sp),y
	sta     ptr1
	txa
	iny
	adc     (sp),y
	sta     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	iny
	sta     (sp),y
	ldy     #$03
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     aslax2
	clc
	ldy     #$04
	adc     (sp),y
	sta     ptr1
	txa
	iny
	adc     (sp),y
	sta     ptr1+1
	ldy     #$02
	lda     (ptr1),y
	ldy     #$00
	sta     (sp),y
	lda     #<(_virusSprite0)
	ldx     #>(_virusSprite0)
;
; break;
;
	.dbg	line, "demo.c", 73
	jmp     L0010
;
; oam_meta_spr(virusCoordinates[i].x, virusCoordinates[i].y, virusSprite1);
;
	.dbg	line, "demo.c", 75
L000D:	jsr     decsp2
	ldy     #$03
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     aslax2
	clc
	ldy     #$04
	adc     (sp),y
	sta     ptr1
	txa
	iny
	adc     (sp),y
	sta     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	iny
	sta     (sp),y
	ldy     #$03
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     aslax2
	clc
	ldy     #$04
	adc     (sp),y
	sta     ptr1
	txa
	iny
	adc     (sp),y
	sta     ptr1+1
	ldy     #$02
	lda     (ptr1),y
	ldy     #$00
	sta     (sp),y
	lda     #<(_virusSprite1)
	ldx     #>(_virusSprite1)
;
; break;
;
	.dbg	line, "demo.c", 76
	jmp     L0010
;
; oam_meta_spr(virusCoordinates[i].x, virusCoordinates[i].y, virusSprite2);
;
	.dbg	line, "demo.c", 78
L000E:	jsr     decsp2
	ldy     #$03
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     aslax2
	clc
	ldy     #$04
	adc     (sp),y
	sta     ptr1
	txa
	iny
	adc     (sp),y
	sta     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	iny
	sta     (sp),y
	ldy     #$03
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     aslax2
	clc
	ldy     #$04
	adc     (sp),y
	sta     ptr1
	txa
	iny
	adc     (sp),y
	sta     ptr1+1
	ldy     #$02
	lda     (ptr1),y
	ldy     #$00
	sta     (sp),y
	lda     #<(_virusSprite2)
	ldx     #>(_virusSprite2)
;
; break;
;
	.dbg	line, "demo.c", 79
	jmp     L0010
;
; oam_meta_spr(virusCoordinates[i].x, virusCoordinates[i].y, virusSprite3);
;
	.dbg	line, "demo.c", 81
L000F:	jsr     decsp2
	ldy     #$03
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     aslax2
	clc
	ldy     #$04
	adc     (sp),y
	sta     ptr1
	txa
	iny
	adc     (sp),y
	sta     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	iny
	sta     (sp),y
	ldy     #$03
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     aslax2
	clc
	ldy     #$04
	adc     (sp),y
	sta     ptr1
	txa
	iny
	adc     (sp),y
	sta     ptr1+1
	ldy     #$02
	lda     (ptr1),y
	ldy     #$00
	sta     (sp),y
	lda     #<(_virusSprite3)
	ldx     #>(_virusSprite3)
L0010:	jsr     _oam_meta_spr
;
; for (i = 0; i < NUM_VIRUSES; ++i) {
;
	.dbg	line, "demo.c", 69
L0007:	ldx     #$00
	lda     #$01
	jsr     addeq0sp
	jmp     L0005
;
; }
;
	.dbg	line, "demo.c", 85
L0006:	jmp     incsp4

	.dbg	line
.segment	"DATA"

M0001:
	.word	$0000

.endproc

; ---------------------------------------------------------------
; void __near__ movement (struct $anon-struct-0001 *virusCoordinates, struct $anon-struct-0001 *initialVirusCoordinates, const struct $anon-struct-0001 *virusPath)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_movement: near

	.dbg	func, "movement", "00", extern, "_movement"
	.dbg	sym, "virusCoordinates", "00", auto, 4
	.dbg	sym, "initialVirusCoordinates", "00", auto, 2
	.dbg	sym, "virusPath", "00", auto, 0
	.dbg	sym, "i", "00", auto, -2

.segment	"CODE"

;
; void movement(Coordinates *virusCoordinates, Coordinates *initialVirusCoordinates, const Coordinates *virusPath) {
;
	.dbg	line, "demo.c", 87
	jsr     pushax
;
; for (i = 0; i < NUM_VIRUSES; ++i) {
;
	.dbg	line, "demo.c", 90
	jsr     decsp2
	ldy     #$00
	tya
	sta     (sp),y
	iny
	sta     (sp),y
L0002:	ldy     #$01
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	cmp     #$10
	txa
	sbc     #$00
	bvc     L0006
	eor     #$80
L0006:	jpl     L0003
;
; virusCoordinates[i].x = initialVirusCoordinates[i].x + virusPath[get_frame_count()].x;
;
	.dbg	line, "demo.c", 91
	iny
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     aslax2
	clc
	ldy     #$06
	adc     (sp),y
	pha
	txa
	iny
	adc     (sp),y
	tax
	pla
	jsr     pushax
	ldy     #$03
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     aslax2
	clc
	ldy     #$06
	adc     (sp),y
	sta     ptr1
	txa
	iny
	adc     (sp),y
	sta     ptr1+1
	ldy     #$01
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	jsr     pushax
	ldy     #$09
	jsr     pushwysp
	jsr     _get_frame_count
	jsr     aslax2
	jsr     tosaddax
	sta     ptr1
	stx     ptr1+1
	ldy     #$01
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	jsr     tosaddax
	ldy     #$00
	jsr     staxspidx
;
; virusCoordinates[i].y = initialVirusCoordinates[i].y + virusPath[get_frame_count()].y;
;
	.dbg	line, "demo.c", 92
	iny
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     aslax2
	clc
	ldy     #$06
	adc     (sp),y
	pha
	txa
	iny
	adc     (sp),y
	tax
	pla
	jsr     pushax
	ldy     #$03
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     aslax2
	clc
	ldy     #$06
	adc     (sp),y
	sta     ptr1
	txa
	iny
	adc     (sp),y
	sta     ptr1+1
	ldy     #$03
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	jsr     pushax
	ldy     #$09
	jsr     pushwysp
	jsr     _get_frame_count
	jsr     aslax2
	jsr     tosaddax
	sta     ptr1
	stx     ptr1+1
	ldy     #$03
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	jsr     tosaddax
	ldy     #$02
	jsr     staxspidx
;
; for (i = 0; i < NUM_VIRUSES; ++i) {
;
	.dbg	line, "demo.c", 90
	ldx     #$00
	lda     #$01
	jsr     addeq0sp
	jmp     L0002
;
; }
;
	.dbg	line, "demo.c", 94
L0003:	jmp     incsp8

	.dbg	line
.endproc

; ---------------------------------------------------------------
; void __near__ main (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_main: near

	.dbg	func, "main", "00", extern, "_main"

.segment	"CODE"

;
; ppu_off(); // screen off
;
	.dbg	line, "demo.c", 99
	jsr     _ppu_off
;
; pal_bg(paletteBackground);
;
	.dbg	line, "demo.c", 102
	lda     #<(_paletteBackground)
	ldx     #>(_paletteBackground)
	jsr     _pal_bg
;
; pal_spr(paletteSprite);
;
	.dbg	line, "demo.c", 103
	lda     #<(_paletteSprite)
	ldx     #>(_paletteSprite)
	jsr     _pal_spr
;
; bank_spr(1);
;
	.dbg	line, "demo.c", 107
	lda     #$01
	jsr     _bank_spr
;
; vram_adr(NAMETABLE_A);
;
	.dbg	line, "demo.c", 109
	ldx     #$20
	lda     #$00
	jsr     _vram_adr
;
; vram_unrle(lungs);
;
	.dbg	line, "demo.c", 111
	lda     #<(_lungs)
	ldx     #>(_lungs)
	jsr     _vram_unrle
;
; ppu_on_all();
;
	.dbg	line, "demo.c", 114
	jsr     _ppu_on_all
;
; initialise_viruses();
;
	.dbg	line, "demo.c", 115
	jsr     _initialise_viruses
;
; movement(virusCoordinates, initialVirusCoordinates, virusPath);
;
	.dbg	line, "demo.c", 119
L0002:	jsr     decsp4
	lda     #<(_virusCoordinates)
	ldy     #$02
	sta     (sp),y
	iny
	lda     #>(_virusCoordinates)
	sta     (sp),y
	lda     #<(_initialVirusCoordinates)
	ldy     #$00
	sta     (sp),y
	iny
	lda     #>(_initialVirusCoordinates)
	sta     (sp),y
	lda     #<(_virusPath)
	ldx     #>(_virusPath)
	jsr     _movement
;
; draw_sprites(virusCoordinates);
;
	.dbg	line, "demo.c", 120
	lda     #<(_virusCoordinates)
	ldx     #>(_virusCoordinates)
	jsr     _draw_sprites
;
; ppu_wait_nmi();
;
	.dbg	line, "demo.c", 122
	jsr     _ppu_wait_nmi
;
; while (1) {
;
	.dbg	line, "demo.c", 118
	jmp     L0002

	.dbg	line
.endproc

